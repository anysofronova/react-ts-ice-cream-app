{"version":3,"file":"static/js/Product.cf6aa41a.chunk.js","mappings":"+LACA,GAAgB,UAAY,2BAA2B,QAAU,yBAAyB,IAAM,qBAAqB,KAAO,sBAAsB,MAAQ,uBAAuB,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,uB,+ECgFzR,EAvEoB,WAAO,IAAD,IAClBA,GAAaC,EAAAA,EAAAA,MAAYD,IAAM,MAC/BE,GAAWC,EAAAA,EAAAA,MACN,QAAPH,GAAcE,EAAS,KAC3B,OAA8BE,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAmCC,EAAAA,EAAAA,wBAAoCP,GAA/DQ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,MAIzB,OAHAC,EAAAA,EAAAA,YAAU,WACJH,GAAQA,EAAK,IAAIF,EAAWE,EAAK,MACpC,CAACA,KAEF,iBAAKI,UAAWC,EAAAA,UAAhB,UACGJ,IAAa,SAACK,EAAA,EAAD,IACbJ,IACC,gBAAKE,UAAWC,EAAAA,MAAhB,UACE,SAACE,EAAA,QAAD,OAGJ,mBAAQH,UAAWC,EAAAA,KAAaG,QAAS,kBAAMd,GAAU,IAAzD,kBAGCG,IACC,iBAAKO,UAAWC,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,IAAhB,UACE,gBACEI,IAAKZ,EAAQa,QAAUC,EACvBC,IAAI,YACJC,OAAM,UAAKhB,EAAQiB,YAAb,kBAAkCjB,EAAQkB,aAA1C,cAGV,iBAAKX,UAAWC,EAAAA,KAAhB,WACE,gBAAKD,UAAWC,EAAAA,MAAhB,SAA+BR,EAAQmB,SACvC,gBAAKZ,UAAWC,EAAAA,QAAhB,mBACGR,EAAQoB,eADX,aACG,EAAiBC,KAAI,SAACC,GAAD,OACpB,iBAAMf,UAAWC,EAAAA,OAAjB,SACGc,GADkCA,QAKxCtB,EAAQuB,cACP,iBAAKhB,UAAWC,EAAAA,KAAhB,0BACgBR,EAAQuB,gBAG1B,4BACE,8BACE,2BACE,sCACA,qCACA,uCACA,4CAEF,+BACGvB,QADH,IACGA,GADH,UACGA,EAASwB,eADZ,aACG,EAAkBH,KAAI,SAACC,GAAD,OACrB,wBAAaA,GAAJA,cAKjB,SAACG,EAAA,EAAD,CACEN,MAAOnB,EAAQmB,MACfO,OAAQ1B,EAAQ0B,OAChBb,OAAQb,EAAQa,OAChBlB,GAAIK,EAAQL","sources":["webpack://react-ts-ice-cream-app/./src/pages/Product/Product.module.scss?4806","pages/Product/Product.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Product_container__9sgXX\",\"product\":\"Product_product__KHMzE\",\"img\":\"Product_img__wZI42\",\"info\":\"Product_info__SJS0-\",\"title\":\"Product_title__NVBCA\",\"filters\":\"Product_filters__2FUZC\",\"filter\":\"Product_filter__cDA3k\",\"desc\":\"Product_desc__IKHuj\",\"back\":\"Product_back__qeQQ6\"};","import styles from \"./Product.module.scss\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { productsApi } from \"../../services/ProductsService\";\nimport NotFound from \"../NotFound/NotFound\";\nimport placeholder from \"../../assets/imgPlaceholder.jpeg\";\nimport { FC, useEffect, useState } from \"react\";\nimport { IProduct } from \"../../models/IProduct\";\nimport OrderPanel from \"../../components/Products/Item/OrderPanel/OrderPanel\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst Product: FC = () => {\n  const id: string = useParams().id || \"-10\";\n  const navigate = useNavigate();\n  if (id === \"-10\") navigate(\"/\");\n  const [product, setProduct] = useState<IProduct>();\n  const { data, isLoading, error } = productsApi.useFetchOneProductQuery(id);\n  useEffect(() => {\n    if (data && data[0]) setProduct(data[0]);\n  }, [data]);\n  return (\n    <div className={styles.container}>\n      {isLoading && <CircularProgress />}\n      {error && (\n        <div className={styles.error}>\n          <NotFound />\n        </div>\n      )}\n      <button className={styles.back} onClick={() => navigate(-1)}>\n        Back\n      </button>\n      {product && (\n        <div className={styles.product}>\n          <div className={styles.img}>\n            <img\n              src={product.imgUrl || placeholder}\n              alt=\"ice-cream\"\n              srcSet={`${product.imgUrlSmall} 300w, ${product.imgUrlMedium} 500w`}\n            />\n          </div>\n          <div className={styles.info}>\n            <div className={styles.title}>{product.title}</div>\n            <div className={styles.filters}>\n              {product.filters?.map((i) => (\n                <span className={styles.filter} key={i}>\n                  {i}\n                </span>\n              ))}\n            </div>\n            {product.description && (\n              <div className={styles.desc}>\n                Ingredients: {product.description}\n              </div>\n            )}\n            <table>\n              <tbody>\n                <tr>\n                  <td>Calories</td>\n                  <td>Protein</td>\n                  <td>Total Fat</td>\n                  <td>Total Carb.</td>\n                </tr>\n                <tr>\n                  {product?.calorie?.map((i) => (\n                    <td key={i}>{i}</td>\n                  ))}\n                </tr>\n              </tbody>\n            </table>\n            <OrderPanel\n              title={product.title}\n              prices={product.prices}\n              imgUrl={product.imgUrl}\n              id={product.id}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Product;\n"],"names":["id","useParams","navigate","useNavigate","useState","product","setProduct","productsApi","data","isLoading","error","useEffect","className","styles","CircularProgress","NotFound","onClick","src","imgUrl","placeholder","alt","srcSet","imgUrlSmall","imgUrlMedium","title","filters","map","i","description","calorie","OrderPanel","prices"],"sourceRoot":""}